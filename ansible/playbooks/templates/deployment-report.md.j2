# Docker Registry Certificate Deployment Report

**Generated:** {{ ansible_date_time.iso8601 }}  
**Registry:** {{ registry_fqdn }}  
**Playbook Version:** {{ playbook_version }}  

## Deployment Summary

| Host | IP Address | Containerd | System CA | HTTP Test | HTTPS Test | Status |
|------|------------|------------|-----------|-----------|------------|---------|
{% for host in ansible_play_hosts %}
| {{ hostvars[host]['inventory_hostname'] }} | {{ hostvars[host]['ansible_default_ipv4']['address'] }} | {{ 'Updated' if hostvars[host]['containerd_cert_copy']['changed'] else 'No change' }} | {{ 'Updated' if hostvars[host]['system_cert_copy']['changed'] else 'No change' }} | {{ 'OK' if hostvars[host]['http_test']['status'] == 401 else 'FAILED' }} | {{ 'OK' if hostvars[host]['https_test']['status'] == 401 else 'FAILED' }} | {{ 'Success' if (hostvars[host]['http_test']['status'] == 401 and hostvars[host]['https_test']['status'] == 401) else 'Needs Review' }} |
{% endfor %}

## Next Steps

1. **Kubernetes Deployment Update**: Update your Kubernetes deployments to use the secure registry
2. **Registry Authentication**: Ensure Kubernetes secrets are configured for registry authentication
3. **Testing**: Test image pulls on all nodes to verify configuration
4. **Monitoring**: Monitor registry usage and certificate expiration

## Commands for Verification

```bash
# Test registry access from any node
curl -k https://{{ registry_fqdn }}/v2/

# Check containerd configuration
cat {{ containerd_cert_dir }}/hosts.toml

# Verify certificate installation
ls -la {{ containerd_cert_dir }}/ca.crt
ls -la {{ system_ca_dir }}/docker-registry.crt
```

## Troubleshooting

If image pulls fail, check:
1. Containerd service status: `systemctl status containerd`
2. Certificate permissions: `ls -la {{ containerd_cert_dir }}/`
3. Registry connectivity: `curl -k https://{{ registry_fqdn }}/v2/`
4. Kubernetes secret: `kubectl get secret registry-secret -n your-namespace`

---
**Generated by Ansible Playbook - HeyCard Enterprise DevOps**