[project]
name = "crypto-rates"
version = "1.0.0"
description = "HeyCard eCommerce Cryptocurrency Exchange Rates Dashboard"
authors = [
    {name = "DevOps Team", email = "devops@heycard.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["cryptocurrency", "exchange-rates", "dashboard", "flask", "kubernetes"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Flask",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Office/Business :: Financial"
]

dependencies = [
    "flask>=2.3.3",
    "requests>=2.31.0",
    "prometheus-client>=0.17.1",
    "gunicorn>=21.2.0",
    "Werkzeug>=2.3.7"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-html>=3.2.0",
    "requests-mock>=1.11.0",
    "flake8>=6.0.0",
    "bandit>=1.7.5",
    "safety>=2.3.5",
    "black>=23.7.0",
    "isort>=5.12.0"
]

[project.urls]
Homepage = "https://github.com/heycard/crypto-rates"
Documentation = "https://github.com/heycard/crypto-rates/blob/main/README.md"
Repository = "https://github.com/heycard/crypto-rates.git"
"Bug Tracker" = "https://github.com/heycard/crypto-rates/issues"

[project.scripts]
crypto-rates = "app.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-branch"
]
testpaths = ["app"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
select = ["E", "F", "W", "C"]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "*.pyc",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
    "build",
    "dist"
]

[tool.bandit]
exclude_dirs = ["tests", "test_*.py"]
skips = ["B101"]  # Skip assert_used test

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]

